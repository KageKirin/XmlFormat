<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="ILRepacker" AfterTargets="Build">

    <Message Text="Repacking $(OutputPath)" Importance="high" />

    <ItemGroup>
      <MainAssembly Include="$(TargetPath)" />

      <_SystemDependencies Include="@(ReferenceCopyLocalPaths)"
                           Condition="$([System.String]::new('%(Filename)').StartsWith('System.')) or '%(Filename)' == 'System'" />
      <_MsBuildDependencies Include="@(ReferenceCopyLocalPaths)"
                           Condition="$([System.String]::new('%(Filename)').StartsWith('Microsoft.Build.'))" />
      <_DotNetDependencies Include="@(ReferenceCopyLocalPaths)"
                           Condition="$([System.String]::new('%(Filename)').StartsWith('Microsoft.NET.'))" />
      <InputAssemblies Include="@(ReferenceCopyLocalPaths)" Exclude="@(_SystemDependencies);@(_MsBuildDependencies);@(_DotNetDependencies)" />

      <LibraryPath Include="%(ReferencePathWithRefAssemblies.RelativeDir)" />
    </ItemGroup>

    <ItemGroup>
      <DoNotInternalizeAssemblies Include="@(MainAssembly)" />
    </ItemGroup>

    <Message Text="Repacking assemblies in $(OutputPath): @(InputAssemblies->'%(Identity)', ' ') into @(MainAssembly->'%(Identity)')" Importance="high" />

    <ItemGroup>
      <_InputAssemblies Include="@(MainAssembly -> '&quot;%(Filename)%(Extension)&quot;')" />
      <_InputAssemblies Include="@(InputAssemblies -> '&quot;%(Filename)%(Extension)&quot;')" />
      <_LibraryPaths Include="@(LibraryPath -> '/lib:&quot;%(RelativeDir)&quot;')" />
    </ItemGroup>

    <PropertyGroup>
      <_Parallel>/parallel</_Parallel>
      <_DebugInfo><!-- /ndebug --></_DebugInfo> <!-- remove comment to disable -->
      <_Verbose>/verbose</_Verbose>
      <_Internalize>/internalize</_Internalize>
      <_RenameInternalized><!--/renameinternalized--></_RenameInternalized>
      <_InternalizeExclude><!-- @(DoNotInternalizeAssemblies->%'(Identity)', ' ') --></_InternalizeExclude>
      <_TargetKind><!--/target:dll--></_TargetKind>

      <_OutputFile>/out:&quot;$(TargetPath)&quot;</_OutputFile>
      <_LogFile>/log:&quot;$(OutputPath)$(AssemblyName).ilrepack.log&quot;</_LogFile>
    </PropertyGroup>

    <Message Text="dotnet ilrepack $(_Parallel) $(_Internalize) $(_RenameInternalized) $(_DebugInfo) $(_Verbose) $(_TargetKind) $(_LogFile) $(_OutputFile) @(_LibraryPaths, ' ') @(_InputAssemblies, ' ')"
       Importance="high"
    />
    <Exec
      Command="dotnet ilrepack $(_Parallel) $(_Internalize) $(_RenameInternalized) $(_DebugInfo) $(_Verbose) $(_TargetKind) $(_LogFile) $(_OutputFile) @(_LibraryPaths, ' ') @(_InputAssemblies, ' ')"
      WorkingDirectory="$(OutDir)"
      ConsoleToMSBuild="True"
    />

    <ItemGroup>
      <FilesToDelete Include="$(OutputPath)*.dll" Exclude="@(MainAssembly)" />
      <FilesToDelete Include="$(OutputPath)*.pdb" Exclude="$(OutputPath)$(TargetName).pdb" />
      <FilesToDelete Include="$(OutputPath)*.deps.json" />
    </ItemGroup>

    <Message Text="Cleaning up merged files: @(FilesToDelete)" Importance="normal" />
    <Delete Files="@(FilesToDelete)" />

  </Target>

</Project>
